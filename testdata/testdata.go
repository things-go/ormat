// Code generated by ormat. DO NOT EDIT.
// version: v0.0.1-rc13

package testdata

import (
	"time"
)

// Testdata 公告-面向所有人的消息
type Testdata struct {
	Id        int64     `gorm:"column:id;autoIncrement:true;not null;primaryKey" json:"id,omitempty"`
	Title     string    `gorm:"column:title;type:varchar(255);not null;index:uk_title_created_at,priority:1;comment:标题" json:"title,omitempty"`                                                                                                 // 标题
	Content   string    `gorm:"column:content;type:varchar(2048);not null;comment:内容" json:"content,omitempty"`                                                                                                                                 // 内容
	Value1    float32   `gorm:"column:value1;type:float;not null;default:1;comment:[@enum:{\"0\":[\"none\",\"空\",\"空注释\"],\"1\":[\"key1\",\"键1\",\"键1注释\"],\"2\":[\"key2\",\"键2\"],\"3\":[\"key3\",\"键3\"]}]" json:"value1,omitempty"`          // [@enum:{"0":["none","空","空注释"],"1":["key1","键1","键1注释"],"2":["key2","键2"],"3":["key3","键3"]}]
	Value2    float32   `gorm:"column:value2;type:float(10,1);not null;default:2;comment:值2,[@enum:{\"0\":[\"none\",\"空\",\"空注释\"],\"1\":[\"key1\",\"键1\",\"键1注释\"],\"2\":[\"key2\",\"键2\"],\"3\":[\"key3\",\"键3\"]}]" json:"value2,omitempty"` // 值2,[@enum:{"0":["none","空","空注释"],"1":["key1","键1","键1注释"],"2":["key2","键2"],"3":["key3","键3"]}]
	Value3    string    `gorm:"column:value3;type:enum('00','SH');not null;default:4;comment:值4" json:"value3,omitempty"`                                                                                                                       // 值4
	CreatedAt time.Time `gorm:"column:created_at;type:datetime;not null;index:uk_title_created_at,priority:2;comment:发布时间" json:"created_at,omitempty"`                                                                                         // 发布时间
	UpdatedAt time.Time `gorm:"column:updated_at;type:datetime;not null" json:"updated_at,omitempty"`
}

// TableName implement schema.Tabler interface
func (*Testdata) TableName() string {
	return "testdata"
}

// __TestdataValue1Mapping  TestdataValue1 mapping
var __TestdataValue1Mapping = map[int]string{
	0: "空",
	1: "键1",
	2: "键2",
	3: "键3",
}

// GetTestdataValue1Desc get mapping description
func GetTestdataValue1Desc(t int) string {
	return __TestdataValue1Mapping[t]
}

// __TestdataValue2Mapping  TestdataValue2 mapping
var __TestdataValue2Mapping = map[int]string{
	0: "空",
	1: "键1",
	2: "键2",
	3: "键3",
}

// GetTestdataValue2Desc get mapping description
func GetTestdataValue2Desc(t int) string {
	return __TestdataValue2Mapping[t]
}

/* protobuf and gorm field helper
// TestdataColumns database column name.
var TestdataColumns = []string {
	"id",
	"title",
	"content",
	"value1",
	"value2",
	"value2",
	"value3",
	"created_at",
	"UNIX_TIMESTAMP(created_at) AS created_at",
	"updated_at",
	"UNIX_TIMESTAMP(updated_at) AS updated_at",
}
// TestdataColumnsWithTable database column name with table prefix
var TestdataColumnsWithTable = []string {
	"testdata.id AS testdata_id",
	"testdata.title AS testdata_title",
	"testdata.content AS testdata_content",
	"testdata.value1 AS testdata_value1",
	"testdata.value2 AS testdata_value2",
	"testdata.value2 AS testdata_value2",
	"testdata.value3 AS testdata_value3",
	"testdata.created_at AS testdata_created_at",
	"UNIX_TIMESTAMP(testdata.created_at) AS testdata_created_at",
	"testdata.updated_at AS testdata_updated_at",
	"UNIX_TIMESTAMP(testdata.updated_at) AS testdata_updated_at",
}
// TestdataColumnsWithAbbrTable database column name with abbr table prefix
var TestdataColumnsWithAbbrTable = []string {
	"t.id AS t_id",
	"t.title AS t_title",
	"t.content AS t_content",
	"t.value1 AS t_value1",
	"t.value2 AS t_value2",
	"t.value2 AS t_value2",
	"t.value3 AS t_value3",
	"t.created_at AS t_created_at",
	"UNIX_TIMESTAMP(t.created_at) AS t_created_at",
	"t.updated_at AS t_updated_at",
	"UNIX_TIMESTAMP(t.updated_at) AS t_updated_at",
}

// Testdata 公告-面向所有人的消息
message Testdata {
	int64 id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { type: [ INTEGER ] }];
	// 标题
	string title = 2;
	// 内容
	string content = 3;
	// [@enum:{"0":["none","空","空注释"],"1":["key1","键1","键1注释"],"2":["key2","键2"],"3":["key3","键3"]}]
	float value1 = 4;
	// 值2,[@enum:{"0":["none","空","空注释"],"1":["key1","键1","键1注释"],"2":["key2","键2"],"3":["key3","键3"]}]
	float value2 = 5;
	// 值3
	double value2 = 6;
	// 值4
	string value3 = 7;
	// 发布时间
	google.protobuf.Timestamp created_at = 8 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
	// 发布时间
	int64 created_at = 9 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { type: [ INTEGER ] }];
	google.protobuf.Timestamp updated_at = 10 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
	int64 updated_at = 11 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { type: [ INTEGER ] }];
}
// TestdataWithTable 公告-面向所有人的消息
message TestdataWithTable {
	int64 testdata_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { type: [ INTEGER ] }];
	// 标题
	string testdata_title = 2;
	// 内容
	string testdata_content = 3;
	// [@enum:{"0":["none","空","空注释"],"1":["key1","键1","键1注释"],"2":["key2","键2"],"3":["key3","键3"]}]
	float testdata_value1 = 4;
	// 值2,[@enum:{"0":["none","空","空注释"],"1":["key1","键1","键1注释"],"2":["key2","键2"],"3":["key3","键3"]}]
	float testdata_value2 = 5;
	// 值3
	double testdata_value2 = 6;
	// 值4
	string testdata_value3 = 7;
	// 发布时间
	google.protobuf.Timestamp testdata_created_at = 8 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
	// 发布时间
	int64 testdata_created_at = 9 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { type: [ INTEGER ] }];
	google.protobuf.Timestamp testdata_updated_at = 10 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
	int64 testdata_updated_at = 11 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { type: [ INTEGER ] }];
}
// TestdataWithAbbrTable 公告-面向所有人的消息
message TestdataWithAbbrTable {
	int64 t_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { type: [ INTEGER ] }];
	// 标题
	string t_title = 2;
	// 内容
	string t_content = 3;
	// [@enum:{"0":["none","空","空注释"],"1":["key1","键1","键1注释"],"2":["key2","键2"],"3":["key3","键3"]}]
	float t_value1 = 4;
	// 值2,[@enum:{"0":["none","空","空注释"],"1":["key1","键1","键1注释"],"2":["key2","键2"],"3":["key3","键3"]}]
	float t_value2 = 5;
	// 值3
	double t_value2 = 6;
	// 值4
	string t_value3 = 7;
	// 发布时间
	google.protobuf.Timestamp t_created_at = 8 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
	// 发布时间
	int64 t_created_at = 9 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { type: [ INTEGER ] }];
	google.protobuf.Timestamp t_updated_at = 10 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
	int64 t_updated_at = 11 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { type: [ INTEGER ] }];
}
*/

/*
// TestdataValue1 [@enum:{"0":["none","空","空注释"],"1":["key1","键1","键1注释"],"2":["key2","键2"],"3":["key3","键3"]}]
enum TestdataValue1 {
	// 空,空注释
	TESTDATA_VALUE1_NONE = 0;
	// 键1,键1注释
	TESTDATA_VALUE1_KEY1 = 1;
	// 键2
	TESTDATA_VALUE1_KEY2 = 2;
	// 键3
	TESTDATA_VALUE1_KEY3 = 3;
}
// TestdataValue2 值2,[@enum:{"0":["none","空","空注释"],"1":["key1","键1","键1注释"],"2":["key2","键2"],"3":["key3","键3"]}]
enum TestdataValue2 {
	// 空,空注释
	TESTDATA_VALUE2_NONE = 0;
	// 键1,键1注释
	TESTDATA_VALUE2_KEY1 = 1;
	// 键2
	TESTDATA_VALUE2_KEY2 = 2;
	// 键3
	TESTDATA_VALUE2_KEY3 = 3;
}
*/
